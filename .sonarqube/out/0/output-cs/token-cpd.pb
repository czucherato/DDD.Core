Ï
YD:\Projetos\DDD.Core\src\building-blocks\DDD.Core.Common\DomainObjects\DomainException.cs
	namespace 	
DDD
 
. 
Core 
. 
Common 
. 
DomainObjects '
{ 
[ 
Serializable 
] 
public 

class 
DomainException  
:! "
	Exception# ,
{ 
public		 
DomainException		 
(		 
)		  
{		! "
}		# $
	protected 
DomainException !
(! "
SerializationInfo" 3
info4 8
,8 9
StreamingContext: J
contextK R
)R S
:T U
baseU Y
(Y Z
infoZ ^
,^ _
context` g
)g h
{i j
}k l
public 
DomainException 
( 
string %
message& -
)- .
:/ 0
base1 5
(5 6
message6 =
)= >
{? @
}A B
public 
DomainException 
( 
string %
message& -
,- .
	Exception/ 8
innerException9 G
)G H
:I J
baseK O
(O P
messageP W
,W X
innerExceptionY g
)g h
{i j
}k l
} 
} Ç
PD:\Projetos\DDD.Core\src\building-blocks\DDD.Core.Common\DomainObjects\Entity.cs
	namespace 	
DDD
 
. 
Core 
. 
Common 
. 
DomainObjects '
{ 
public 

abstract 
class 
Entity  
{ 
public 
Guid 
Id 
{ 
get 
; 
	protected '
set( +
;+ ,
}- .
public		 
override		 
bool		 
Equals		 #
(		# $
object		$ *
obj		+ .
)		. /
{

 	
var 
	compareTo 
= 
obj 
as  "
Entity# )
;) *
if 
( 
ReferenceEquals 
(  
this  $
,$ %
	compareTo& /
)/ 0
)0 1
return2 8
true9 =
;= >
if 
( 
	compareTo 
is 
null !
)! "
return# )
false* /
;/ 0
return 
Id 
. 
Equals 
( 
	compareTo &
.& '
Id' )
)) *
;* +
} 	
public 
override 
int 
GetHashCode '
(' (
)( )
{ 	
return 
( 
GetType 
( 
) 
. 
GetHashCode )
() *
)* +
*, -
$num. 1
)1 2
+3 4
Id5 7
.7 8
GetHashCode8 C
(C D
)D E
;E F
} 	
public 
override 
string 
ToString '
(' (
)( )
{ 	
return 
$" 
{ 
GetType 
( 
) 
.  
Name  $
}$ %
 [Id=% *
{* +
Id+ -
}- .
]. /
"/ 0
;0 1
} 	
} 
} í
XD:\Projetos\DDD.Core\src\building-blocks\DDD.Core.Common\DomainObjects\IAggregateRoot.cs
	namespace 	
DDD
 
. 
Core 
. 
Common 
. 
DomainObjects '
{ 
public 

	interface 
IAggregateRoot #
{$ %
}& '
} Å
UD:\Projetos\DDD.Core\src\building-blocks\DDD.Core.Common\DomainObjects\ValueObject.cs
	namespace 	
DDD
 
. 
Core 
. 
Common 
. 
DomainObjects '
{ 
public 

abstract 
class 
ValueObject %
{ 
	protected		 
abstract		 
IEnumerable		 &
<		& '
object		' -
>		- .!
GetEqualityComponents		/ D
(		D E
)		E F
;		F G
public 
override 
bool 
Equals #
(# $
object$ *
obj+ .
). /
{ 	
if 
( 
obj 
== 
null 
) 
return 
false 
; 
if 
( 
GetType 
( 
) 
!= 
obj  
.  !
GetType! (
(( )
)) *
)* +
return 
false 
; 
var 
valueObject 
= 
( 
ValueObject *
)* +
obj+ .
;. /
return !
GetEqualityComponents (
(( )
)) *
.* +
SequenceEqual+ 8
(8 9
valueObject9 D
.D E!
GetEqualityComponentsE Z
(Z [
)[ \
)\ ]
;] ^
} 	
public 
override 
int 
GetHashCode '
(' (
)( )
{ 	
return !
GetEqualityComponents (
(( )
)) *
. 
	Aggregate 
( 
$num 
, 
( 
current &
,& '
obj( +
)+ ,
=>- /
{ 
	unchecked 
{ 
return 
current &
*' (
$num) +
+, -
(. /
obj/ 2
?2 3
.3 4
GetHashCode4 ?
(? @
)@ A
??B D
$numE F
)F G
;G H
}   
}!! 
)!! 
;!! 
}"" 	
}## 
}$$ 